# Hack the Interview IV (Asia Pacific)
# Optimal Network Routing Problem
import numpy as np
list1 = [12,6,5,3]
list2 = [6,13,3,15]
list3 = [8,2,6,9]
arr = np.array(list1+list2+list3)
arr = arr.reshape(3,4)
print(arr)
m = arr.shape[0]
n = arr.shape[1]
arr1 = np.zeros((3,4),dtype=int)

arr1[0][0] = 0
arr1[m-1][n-1] = min(abs(arr[m-2][n-1]-arr[m-1][n-1]),abs(arr[m-1][n-2]-arr[m-1][n-1]))

for i in range(1,m):
    arr1[i][0] = abs(arr[i][0]-arr[i-1][0])

for j in range(1,n):
    arr1[0][j] = abs(arr[0][j]-arr[0][j-1])

for i in range(1,m-1):
    for j in range(1,n-1):
        left = abs(arr[i][j-1]-arr[i][j])
        right = abs(arr[i][j+1]-arr[i][j])
        up = abs(arr[i-1][j]-arr[i][j])
        down = abs(arr[i+1][j]-arr[i][j])
        arr1[i][j] = min(left,right,up,down)

for j in range(1,n-1):
    left = abs(arr[m-1][j-1]-arr[m-1][j])
    right = abs(arr[m-1][j+1]-arr[m-1][j])
    up = abs(arr[(m-1)-1][j]-arr[m-1][j])
    arr1[2][j] = min(left,right,up)

for i in range(1,m-1):
    left1 = abs(arr[i][(n-1)-1]-arr[i][n-1])
    up1 = abs(arr[i-1][n-1]-arr[i][n-1])
    down1 = abs(arr[i+1][n-1]-arr[i][n-1])
    arr1[i][n-1] = min(left1,up1,down1)

print(arr1)
